Package sun.plugin2.os.windows
Style AllStatic
JavaClass Windows
JavaOutputDir ../../../../src/plugin/share/classes
NativeOutputDir ../../../../src/plugin/win32/plugin2/jp2native

Import java.nio.*

# For the time being we've copied the GlueGen runtime classes into the
# plugin's source tree -- probably should put these under
# sun.gluegen.runtime in the j2se tree for use by all of j2se
GlueGenRuntimePackage sun.plugin2.gluegen.runtime

CustomCCode #define WIN32_LEAN_AND_MEAN
CustomCCode #include <windows.h>
CustomCCode #undef WIN32_LEAN_AND_MEAN
CustomCCode #include <stdlib.h>
CustomCCode #include <stddef.h>
CustomCCode #include <malloc.h>
CustomCCode /* This typedef is apparently needed for compilers before VC8 */
CustomCCode #if _MSC_VER < 1400
CustomCCode typedef int intptr_t;
CustomCCode #endif

# This is a hack to be able to treat BOOL arguments and return values
# differently than the one in the SECURITY_ATTRIBUTES struct due to a
# limitation in GlueGen
CustomCCode #define BOOL_PARAM BOOL

# Workaround to limitations in GlueGen's #define handling
# (doesn't currently handle negative numbers)
CustomJavaCode Windows  public static final long INVALID_HANDLE_VALUE = -1;

CustomJavaCode Windows  static {
CustomJavaCode Windows      // This is called very early in bootstrapping of the new plug-in
CustomJavaCode Windows      // so we can't use the Config class to determine this answer
CustomJavaCode Windows      String javaVersion = System.getProperty("java.version");
CustomJavaCode Windows      if (javaVersion.startsWith("1.4") || javaVersion.startsWith("1.5")) {
CustomJavaCode Windows          // Versions of Java before 1.6 don't have this dependent library
CustomJavaCode Windows          // of the jp2native library, so need to load it manually
CustomJavaCode Windows          sun.plugin2.util.NativeLibLoader.load(new String[] {"msvcr71"});
CustomJavaCode Windows      }
CustomJavaCode Windows      sun.plugin2.util.NativeLibLoader.load(new String[] {"jp2native"});
CustomJavaCode Windows  }

Opaque long HANDLE
Opaque boolean BOOL_PARAM
ReturnValueCapacity MapViewOfFile {4}
ArgumentIsString CreateFileMappingA 5
ArgumentIsString OpenFileMappingA 2
ArgumentIsString CreateEventA 3
ArgumentIsString OpenEventA 2
ArgumentIsString CreateFileA 0
ArgumentIsString CreateNamedPipeA 0

# ReadFile and WriteFile can block, so can only take direct Buffers
NIODirectOnly ReadFile
NIODirectOnly WriteFile
