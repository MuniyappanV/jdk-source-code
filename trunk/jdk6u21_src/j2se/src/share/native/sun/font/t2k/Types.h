/*
 * @(#)Types.h	1.17 10/04/02
 *
 * Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */


/* $Revision: 1.1 $ */
/*
Dev.CD Aug 95 TC:Tool Chest:Interfaces:UniversalInterfaces 1.0:CIncludes:
	File:		Types.h

	Copyright:	© 1984-1993 by Apple Computer, Inc., all rights reserved.

	WARNING
	This file was auto generated by the interfacer tool. Modifications
	must be made to the master file.

*/

#ifndef __TYPES__
#define __TYPES__

#include <sys/types.h>

#define __java2d__ 1
#if !defined(__java2d__)
#ifndef __CONDITIONALMACROS__
#include <ConditionalMacros.h>
#endif
#endif	/* __pink__*/

#ifndef NULL
#define NULL 0

#endif

#ifndef nil
#define nil 0
#endif

#ifndef NIL
#define NIL 0
#endif

#define noErr 0

typedef unsigned char Byte;

typedef char SignedByte;

typedef char *Ptr;


/*  pointer to a master pointer */

typedef Ptr *Handle;


/* fixed point arithmatic type */

#ifdef _LP64
typedef int Fixed;
typedef int Fract;
#else
typedef long Fixed;
typedef long Fract;
#endif

typedef Fixed *FixedPtr;

typedef Fract *FractPtr;

#ifdef THINK_C
#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct extended80 {
	short						w[5];
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct extended80 extended80;

#else
#ifdef applec
#ifdef mc68881
#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct extended80 {
	short						w[5];
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct extended80 extended80;

#else
typedef extended extended80;

#endif

#else
#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct extended80 {
	short						w[5];
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct extended80 extended80;

#endif

#endif

#ifdef applec
typedef long double float_t;

typedef long double double_t;

#elif powerc
typedef float float_t;

typedef double double_t;

#endif

#if !defined(__java2d__)

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct wide {
#ifdef _LP64
	int						hi;
	unsigned int				lo;
#else
	long						hi;
	unsigned long				lo;
#endif
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct wide wide;

#endif	/* __pink__*/

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct UnsignedWide {
#ifdef _LP64
	unsigned int				hi;
	unsigned int				lo;
#else
	unsigned long				hi;
	unsigned long				lo;
#endif
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct UnsignedWide UnsignedWide;

#if !(defined(__pink__) && defined (Taligent_CPRIMITIVETYPES))

#ifndef true
#define true 1
#endif

#ifndef false
#define false 0
#endif
#endif

typedef char Boolean;

enum  {
	v,
	h
};

typedef unsigned char VHSelect;

typedef long (*ProcPtr)();

typedef ProcPtr *ProcHandle;

#if !USESROUTINEDESCRIPTORS

/* Note: if USESROUTINEDESCRIPTORS is true, UniversalProcPtr and
		UniversalProcHandle are defined in MixedMode.h */

typedef ProcPtr UniversalProcPtr, *UniversalProcHandle;

#endif

typedef unsigned char Str255[256], Str63[64], Str32[33], Str31[32], Str27[28], Str15[16], *StringPtr, **StringHandle;


/*
	The commented out section below is how Length() used to be declared. Because 
	of an interfacer tool limitation, we cannot output the Length virtual C++ 
	funtion. Instead of just defining the Length macro for both C and C++ and 
	cluttering the namespace, we have decided to just add a new macro called 
	StrLength.

#ifdef __cplusplus
inline unsigned char &Length(StringPtr string) { return (*string); }
#else
#define Length(string) (*(unsigned char *)(string))
#endif
*/

#define StrLength(string) (*(unsigned char *)(string))

typedef const unsigned char *ConstStr255Param;

typedef ConstStr255Param ConstStr63Param, ConstStr32Param, ConstStr31Param, ConstStr27Param, ConstStr15Param;


/* error code */

typedef short OSErr;

#ifdef _LP64

typedef unsigned int OSType;
typedef unsigned int ResType;

#else

typedef unsigned long OSType;
typedef unsigned long ResType;

#endif

typedef OSType *OSTypePtr;

typedef ResType *ResTypePtr;

typedef unsigned char Style;

typedef short ScriptCode;

typedef short LangCode;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct Point {
	short						v;
	short						h;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct Point Point;

typedef Point *PointPtr;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct Rect {
	short						top;
	short						left;
	short						bottom;
	short						right;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct Rect Rect;

typedef Rect *RectPtr;

enum  {
	normal						= 0,
	bold						= 1,
	italic						= 2,
	underline					= 4,
	outline						= 8,
	shadow						= 0x10,
	condense					= 0x20,
	extend						= 0x40
};


/* Numeric version part of 'vers' resource */

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct NumVersion {
	unsigned char				majorRev;						/*1st part of version number in BCD*/
	unsigned char				minorAndBugRev;					/*2nd & 3rd part of version number share a byte*/
	unsigned char				stage;							/*stage code: dev, alpha, beta, final*/
	unsigned char				nonRelRev;						/*revision level of non-released version*/
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct NumVersion NumVersion;


/* 'vers' resource format */

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct VersRec {
	NumVersion					numericVersion;					/*encoded version number*/
	short						countryCode;					/*country code from intl utilities*/
	Str255						shortVersion;					/*version number string - worst case*/
	Str255						reserved;						/*longMessage string packed after shortVersion*/
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct VersRec VersRec;

typedef VersRec *VersRecPtr, **VersRecHndl;

#if !defined(__java2d__)

#ifndef __MIXEDMODE__
#include <MixedMode.h>
/*	#include <Traps.h>											*/
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern pascal void Debugger(void)
 ONEWORDINLINE(0xA9FF);
extern pascal void DebugStr(ConstStr255Param aStr)
 ONEWORDINLINE(0xABFF);
extern pascal void Debugger68k(void)
 ONEWORDINLINE(0xA9FF);
extern pascal void DebugStr68k(ConstStr255Param aStr)
 ONEWORDINLINE(0xABFF);
extern void debugstr(char *aStr);
extern pascal void SysBreak(void)
 THREEWORDINLINE(0x303C, 0xFE16, 0xA9C9);
extern pascal void SysBreakStr(ConstStr255Param debugStr)
 THREEWORDINLINE(0x303C, 0xFE15, 0xA9C9);
extern pascal void SysBreakFunc(ConstStr255Param debugFunc)
 THREEWORDINLINE(0x303C, 0xFE14, 0xA9C9);
#ifdef __cplusplus
}
#endif

#else	

/* null keyword... */
#undef pascal
#define pascal
#define dontUseInLines

#endif	

#endif

