#
# Copyright (c) 2008, Oracle and/or its affiliates. All rights reserved.
# ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#
# @(#)Defs-linux.gmk	1.19 10/03/23
#
# WARNING: This file is shared with other workspaces.
#

#
# Definitions for Linux.
#

# FullPath just makes sure it never ends with a / and no duplicates
define FullPath
$(shell cd $1 2> $(DEV_NULL) && pwd)
endef

# OptFullPath: Absolute path name of a dir that might not initially exist.
define OptFullPath
$(shell if [ "$1" != "" -a -d "$1" ]; then (cd $1 && pwd); else echo "$1"; fi)
endef

# Location on system where jdk installs might be
USRJDKINSTANCES_PATH =/opt/java

# UNIXCOMMAND_PATH: path to where the most common Unix commands are.
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_UNIXCOMMAND_PATH)" "undefined"
  UNIXCOMMAND_PATH :=$(call PrefixPath,$(ALT_UNIXCOMMAND_PATH))
else
  UNIXCOMMAND_PATH  = /bin/
endif

# USRBIN_PATH: path to where the most common Unix commands are.
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_USRBIN_PATH)" "undefined"
  USRBIN_PATH :=$(call PrefixPath,$(ALT_USRBIN_PATH))
else
  USRBIN_PATH  = /usr/bin/
endif

# UNIXCCS_PATH: path to where the Solaris ported UNIX commands can be found
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_UNIXCCS_PATH)" "undefined"
  UNIXCCS_PATH :=$(call PrefixPath,$(ALT_UNIXCCS_PATH))
else
  UNIXCCS_PATH = /usr/ccs/bin/
endif

# SLASH_JAVA: location of all network accessable files
ifdef ALT_SLASH_JAVA
  SLASH_JAVA  =$(ALT_SLASH_JAVA)
else
  SLASH_JAVA  =/java
endif

# JDK_DEVTOOLS_DIR: common path for all the java devtools
ifdef ALT_JDK_DEVTOOLS_DIR
  JDK_DEVTOOLS_DIR  =$(ALT_JDK_DEVTOOLS_DIR)
else
  JDK_DEVTOOLS_DIR =$(SLASH_JAVA)/devtools
endif

# COMPILER_PATH: path to where the compiler and tools are installed.
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_COMPILER_PATH)" "undefined"
  COMPILER_PATH :=$(call PrefixPath,$(ALT_COMPILER_PATH))
else
  COMPILER_PATH  =/usr/bin/
endif

# OPENWIN_HOME: path to where the X11 environment is installed.
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_OPENWIN_HOME)" "undefined"
  OPENWIN_HOME :=$(call PrefixPath,$(ALT_OPENWIN_HOME))
else
  OPENWIN_HOME  =/usr/X11R6/
endif

ifeq ($(ARCH), amd64)
override OPENWIN_LIB             = $(OPENWIN_HOME)/lib64
else
override OPENWIN_LIB             = $(OPENWIN_HOME)/lib
endif

# DEVTOOLS_PATH: for other tools required for building (such as zip, etc.)
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_DEVTOOLS_PATH)" "undefined"
  DEVTOOLS_PATH :=$(call PrefixPath,$(ALT_DEVTOOLS_PATH))
else
  DEVTOOLS_PATH =$(JDK_DEVTOOLS_DIR)/$(PLATFORM)/bin/
endif

# _BOOTDIR1: First choice for a Bootstrap JDK, previous released JDK.
# _BOOTDIR2: Second choice
ifndef ALT_BOOTDIR
  _BOOTDIR1  =$(SLASH_JAVA)/re/j2se/$(PREVIOUS_JDK_VERSION)/archive/fcs/binaries/$(PLATFORM)-$(ARCH)
  _BOOTDIR2  =$(USRJDKINSTANCES_PATH)/jdk$(PREVIOUS_JDK_VERSION)
endif

# MOTIF_DIR: must point to a directory containing the Xm and include directories
ifdef ALT_MOTIF_DIR
  MOTIF_DIR=$(ALT_MOTIF_DIR)
else
  MOTIF_DIR = $(JDK_DEVTOOLS_DIR)/$(PLATFORM)/motif-$(ARCH)
endif

# GCC29_COMPILER_PATH: is the path to where the gcc 2.9 compiler is installed
#  NOTE: Must end with / so that it could be empty, allowing PATH usage.
ifneq "$(origin ALT_GCC29_COMPILER_PATH)" "undefined"
  GCC29_COMPILER_PATH :=$(call PrefixPath,$(ALT_GCC29_COMPILER_PATH))
else
  GCC29_COMPILER_PATH = $(JDK_DEVTOOLS_DIR)/$(PLATFORM)/gcc29/usr/
endif

# Motif settings, always build headless on Linux
STATIC_MOTIF=true
LIBM=-lm
ifndef NO_BUILD_MOTIF
  BUILD_MOTIF21 = true
endif
BUILD_HEADLESS = true
ifeq ($(ARCH_DATA_MODEL), 32)
  MOTIF_LIB = $(MOTIF_DIR)/lib
else
  MOTIF_LIB = $(MOTIF_DIR)/lib64
endif

_CUPS_HEADERS_PATH=/usr/include

# JDK_IMPORT_PATH: location of previously built JDK (this version).
ifdef ALT_JDK_IMPORT_PATH
  JDK_IMPORT_PATH  :=$(call FullPath,$(ALT_JDK_IMPORT_PATH))
else
  JDK_IMPORT_PATH   = $(_PROMOTED_BUILD_PATH)$(_JDK_IMPORT_VARIANT)
endif
JDK_IMPORT_PATH:=$(call AltCheckValue,JDK_IMPORT_PATH)

# HOTSPOT_IMPORT_PATH: location of hotspot pre-built files
ifdef ALT_HOTSPOT_IMPORT_PATH
  HOTSPOT_IMPORT_PATH :=$(call FullPath,$(ALT_HOTSPOT_IMPORT_PATH))
else
  HOTSPOT_IMPORT_PATH =$(JDK_IMPORT_PATH)
endif
HOTSPOT_IMPORT_PATH:=$(call AltCheckValue,HOTSPOT_IMPORT_PATH)

# HOTSPOT_CLIENT_PATH: location of client jvm library file.
ifeq ($(ARCH_DATA_MODEL), 32)
  ifdef ALT_HOTSPOT_CLIENT_PATH
    HOTSPOT_CLIENT_PATH :=$(call FullPath,$(ALT_HOTSPOT_CLIENT_PATH))
  else
    HOTSPOT_CLIENT_PATH   =$(HOTSPOT_IMPORT_PATH)/$(ARCH_VM_SUBDIR)/client
  endif
  HOTSPOT_CLIENT_PATH:=$(call AltCheckValue,HOTSPOT_CLIENT_PATH)
endif

# HOTSPOT_SERVER_PATH: location of server jvm library file.
ifdef ALT_HOTSPOT_SERVER_PATH
  HOTSPOT_SERVER_PATH :=$(call FullPath,$(ALT_HOTSPOT_SERVER_PATH))
else
  HOTSPOT_SERVER_PATH   =$(HOTSPOT_IMPORT_PATH)/$(ARCH_VM_SUBDIR)/server
endif
HOTSPOT_SERVER_PATH:=$(call AltCheckValue,HOTSPOT_SERVER_PATH)

