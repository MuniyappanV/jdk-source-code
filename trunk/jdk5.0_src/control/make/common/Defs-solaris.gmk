#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# SUN PROPRIETARY/CONFIDENTIAL.  Use is subject to license terms.
#

#
# @(#)Defs-solaris.gmk	1.200 04/02/19
#
# Makefile to specify for Solaris.  Should not contain any rules.
#

# set default values for where to find the MASTER workspaces. Allow
# overrides to reset

CONTROL_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/control
ifdef ALT_CONTROL_MASTER
  CONTROL_MASTER=$(ALT_CONTROL_MASTER)
endif

HOTSPOT_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/hotspot
ifdef ALT_HOTSPOT_MASTER
  HOTSPOT_MASTER=$(ALT_HOTSPOT_MASTER)
endif

MOTIF_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/motif
ifdef ALT_MOTIF_MASTER
  MOTIF_MASTER=$(ALT_MOTIF_MASTER)
endif

J2SE_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/j2se
ifdef ALT_J2SE_MASTER
  J2SE_MASTER=$(ALT_J2SE_MASTER)
endif

INSTALL_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/install
ifdef ALT_INSTALL_MASTER
  INSTALL_MASTER=$(ALT_INSTALL_MASTER)
endif

DEPLOY_MASTER=/java/jdk/$(JDK_VERSION)/ws/MASTER/deploy
ifdef ALT_DEPLOY_MASTER
  DEPLOY_MASTER=$(ALT_DEPLOY_MASTER)
endif

# define these to avoid picking up ones from alaises or from
# non-standard locations
#

ADB            = $(UNIXCOMMAND_PATH)adb
AR             = $(UNIXCCS_PATH)ar
AS             = $(UNIXCCS_PATH)as
BASENAME       = $(UNIXCOMMAND_PATH)basename
CAT            = $(UNIXCOMMAND_PATH)cat
CC             = $(COMPILER_PATH)cc
CPP            = $(COMPILER_PATH)cc -E
CXX            = $(COMPILER_PATH)CC
CD             = cd # intrinsic unix command
CHMOD          = $(UNIXCOMMAND_PATH)chmod
COMM           = $(UNIXCOMMAND_PATH)comm
COMPRESS       = $(UNIXCOMMAND_PATH)compress
CP             = $(UNIXCOMMAND_PATH)cp
CPIO           = $(UNIXCOMMAND_PATH)cpio
CUT            = $(UNIXCOMMAND_PATH)cut
DATE           = $(UNIXCOMMAND_PATH)date
DF             = $(UNIXCOMMAND_PATH)df
DIFF           = $(UNIXCOMMAND_PATH)diff
DIRNAME        = $(UNIXCOMMAND_PATH)dirname
ECHO           = $(UNIXCOMMAND_PATH)echo
EGREP          = $(UNIXCOMMAND_PATH)egrep
EXPR           = $(UNIXCOMMAND_PATH)expr
FIND           = $(UNIXCOMMAND_PATH)find
GREP           = $(UNIXCOMMAND_PATH)grep
ISAINFO        = $(UNIXCOMMAND_PATH)isainfo
LEX            = $(UNIXCCS_PATH)lex
LN             = $(UNIXCOMMAND_PATH)ln
LS             = $(UNIXCOMMAND_PATH)ls
M4             = $(UNIXCCS_PATH)m4
MCS            = $(UNIXCCS_PATH)mcs
MKDIR          = $(UNIXCOMMAND_PATH)mkdir
MSGFMT         = $(UNIXCOMMAND_PATH)msgfmt
MV             = $(UNIXCOMMAND_PATH)mv
NAWK           = $(UNIXCOMMAND_PATH)nawk
PWD            = $(UNIXCOMMAND_PATH)pwd
RC             = $(UNIXCOMMAND_PATH)rc
#RM   is defined by GNU Make as 'rm -f'
RMDIR          = $(UNIXCOMMAND_PATH)rmdir
SED            = $(UNIXCOMMAND_PATH)sed
SH             = $(UNIXCOMMAND_PATH)sh
SORT           = $(UNIXCOMMAND_PATH)sort
STRIP          = $(UNIXCCS_PATH)strip
TAR            = $(UNIXCOMMAND_PATH)tar
TOUCH          = $(UNIXCOMMAND_PATH)touch
TR             = $(UNIXCOMMAND_PATH)tr
TRUE           = $(UNIXCOMMAND_PATH)true
UNAME          = $(UNIXCOMMAND_PATH)uname
UNIQ           = $(UNIXCOMMAND_PATH)uniq
UNZIPSFX       = $(DEVTOOLS_PATH)unzipsfx
WC             = $(UNIXCOMMAND_PATH)wc
ZIPEXE         = $(DEVTOOLS_PATH)zip


# Solaris sparc build can be either 32-bit or 64-bit.
# Default to 32, but allow explicit setting to 32 or 64.
#
ifndef ARCH_DATA_MODEL
  ARCH_DATA_MODEL=32
endif

ifeq ($(ARCH_DATA_MODEL), 32)
  archExpr = case "`$(UNAME) -p`" in  \
		i[3-9]86) \
		    $(ECHO) i586 \
		    ;; \
		ia64) \
		    $(ECHO) ia64 \
		    ;; \
		sparc*)  \
		    $(ECHO) sparc \
		    ;; \
		*) \
		    $(UNAME) -p  \
		    ;; \
	esac
  ARCH        := $(shell $(archExpr) )
else
   ARCH := $(shell $(ISAINFO) -n)
   # ISA_DIR is used to locate sparcv9 specific libraries which are generally
   # in the same general place as other libraries under the ./sparcv9 directory
   ISA_DIR = /sparcv9
endif
ifeq ($(ARCH), i586)
   ARCH_FAMILY = $(ARCH)
   HOTSPOT_ARCH = i486
else
   ARCH_FAMILY = sparc
   HOTSPOT_ARCH = $(ARCH)
endif

# Need to maintain the jre/lib/i386 location for 32-bit Intel
ifeq ($(ARCH), i586)
   ARCH_FAMILY = $(ARCH)
   LIBARCH = i386
else
   ARCH_FAMILY = sparc
   LIBARCH = $(ARCH)
endif


#
# Default Previous jre and jdk bundle path
# 
_PREVIOUS_JDK_FILE = j2sdk-$(PREVIOUS_JDK_UNDERSCORE_VERSION)-$(PLATFORM)-$(ARCH).tar
_PREVIOUS_JRE_FILE = j2re-$(PREVIOUS_JDK_UNDERSCORE_VERSION)-$(PLATFORM)-$(ARCH).tar
_PREVIOUS_RELEASE_PATH = /java/re/j2se/$(PREVIOUS_JDK_VERSION)/archive/fcs/bundles/$(PLATFORM)-$(ARCH)
PREVIOUS_JRE_BUNDLE = $(PREVIOUS_RELEASE_PATH)/$(PREVIOUS_JRE_FILE)
PREVIOUS_JDK_BUNDLE = $(PREVIOUS_RELEASE_PATH)/$(PREVIOUS_JDK_FILE)

OS_VERSION := $(shell $(UNAME) -r)
OS_NAME = solaris

# UNIXCOMMAND_PATH is the path to where the most common Unix
# commands are installed.
UNIXCOMMAND_PATH = /usr/bin/
# Allow the user to override the default value...
ifdef ALT_UNIXCOMMAND_PATH
# make sure that there is a "/" on the end...
UNIXCOMMAND_PATH = $(subst //,/,$(ALT_UNIXCOMMAND_PATH)/)
endif

# UNIXCCS_PATH is the path to where the less common UNIX commands
# can be found
UNIXCCS_PATH = /usr/ccs/bin/
# Allow the user to override the default value...
ifdef ALT_UNIXCCS_PATH
# make sure that there is a "/" on the end...
UNIXCCS_PATH = $(subst //,/,$(ALT_UNIXCCS_PATH)/)
endif

# COMPILER_PATH is the path to where the compiler and tools 
# are installed.
COMPILER_PATH = /java/devtools/$(ARCH_FAMILY)/SUNWspro/SOS8/bin/
# Allow the user to override the default value...
ifdef ALT_COMPILER_PATH
COMPILER_PATH = $(subst //,/,$(subst \,/,$(ALT_COMPILER_PATH))/)
endif

# GCC_COMPILER_PATH is the path to where the gcc/g++ compiler and tools 
# are installed.
GCC_COMPILER_PATH = /java/devtools/$(ARCH_FAMILY)/gnucc/bin/
# Allow the user to override the default value...
ifdef ALT_GCC_COMPILER_PATH
GCC_COMPILER_PATH = $(subst //,/,$(subst \,/,$(ALT_GCC_COMPILER_PATH))/)
endif

# DEVTOOLS_PATH is for other tools required for building (such as
# zip, etc.)
DEVTOOLS_PATH = /java/devtools/$(ARCH_FAMILY)/bin/
# Allow the user to override the default value...
ifdef ALT_DEVTOOLS_PATH
DEVTOOLS_PATH = $(subst //,/,$(ALT_DEVTOOLS_PATH)/)
endif

# where is unwanted output to be delivered?
DEV_NULL = /dev/null
export DEV_NULL

CLASSPATH_SEPARATOR = :

#
# Default BOOTDIR
#
_BOOTDIR = /java/re/j2se/$(PREVIOUS_JDK_VERSION)/archive/fcs/binaries/$(PLATFORM)-$(ARCH_FAMILY)

# suffix used for object file (.o for unix .obj for windows)
OBJECT_SUFFIX = o
# The suffix applied to runtime libraries
LIBRARY_SUFFIX = so
# The suffix applied to link libraries
LIB_SUFFIX     = so
# The suffix applied to the library name for FDLIBM
EXE_SUFFIX =
# The prefix applied to library files (lib for solaris, nothing for windows)
LIB_PREFIX = lib

#
# Default Motif directory. Set MOTIF_DIR to ALT_MOTIF_DIR if set.
# ALT_MOTIF_DIR must point to a directory containing motif12 and 
# and motif21 directories which in turn contain the Xm and include
# directories for the appropriate version of motif.
#
# MOTIF_VERSION_STRING is set by make/sun/motif12/Makefile and 
# make/sun/motif21/Makefile
#

MOTIF_DIR=/java/devtools/$(ARCH_FAMILY)/motif$(MOTIF_VERSION_STRING)
ifdef ALT_MOTIF_DIR
  MOTIF_DIR=$(ALT_MOTIF_DIR)/motif$(MOTIF_VERSION_STRING)
endif
MOTIF_LIB = $(MOTIF_DIR)/lib$(ISA_DIR)

# Values for the JDI binding of the Serviceability Agent.
HOTSPOT_SALIB_PATH = $(HOTSPOT_IMPORT_PATH)/jre/lib/$(LIBARCH)
SA_OPT_LIB_NAME    = $(LIB_PREFIX)saproc$(OPT_SUFFIX).$(LIBRARY_SUFFIX)
SA_DEBUG_LIB_NAME  = $(LIB_PREFIX)saproc$(DBG_SUFFIX).$(LIBRARY_SUFFIX)
INCLUDE_SA = true
