#
# @(#)l10n.properties	1.10 02/11/08
#
# Copyright 1999 Sun Microsystems, Inc. All rights reserved.
# Copyright 1999 Sun Microsystems, Inc. Tous droits réservés.
# 901 San Antonio Road, Palo Alto, California, 94303, U.S.A.
# 
#
# This software is the confidential and proprietary information
# of Sun Microsystems, Inc. ("Confidential Information").  You
# shall not disclose such Confidential Information and shall use
# it only in accordance with the terms of the license agreement
# you entered into with Sun.
#

#
# User errors, command line errors.
#
cant.create.dir=\
	The directory {0} could not be create for output.
at.args.cant.read=\
	Can''t read command line arguments from file {1}.
at.args.io.exception=\
	The following I/O problem was encountered when processing an @ \
        argument on the command line: {0}.
old.jni.mixed=\
	Can''t mix options -jni and -old.  Try -help.
old.llni.mixed=\
	Can''t mix options -old and -llni.  Try -help.
old.not.supported=\
	Option -old not supported by this version of javah.
invalid.method.signature=\
	Invalid method signature: {0}
jni.llni.mixed=\
	Can''t mix options -jni and -llni.  Try -help.
jni.no.stubs=\
	JNI does not require stubs, please refer to the JNI documentation.
dir.file.mixed=\
	Can''t mix options -d and -o.  Try -help.
no.classes.specified=\
	No classes were specified on the command line.  Try -help.
unknown.option=\
	{0} is an illegal argument\n
tracing.not.supported=\
	Warning: Tracing is no longer supported.  Instead, use\
	-verbose:jni option of the virtual machine.

#
# Usage message.
#
usage=\
Usage: javah [options] <classes>\n\
\n\
where [options] include:\n\
\n\t\
-help                 Print this help message\n\t\
-classpath <path>     Path from which to load classes\n\t\
-bootclasspath <path> Path from which to load bootstrap classes\n\t\
-d <dir>              Output directory\n\t\
-o <file>             Output file (only one of -d or -o may be used)\n\t\
-jni                  Generate JNI-style header file (default)\n\t\
-old                  Generate old JDK1.0-style header file\n\t\
-stubs                Generate a stubs file\n\t\
-version              Print version information\n\t\
-verbose              Enable verbose output\n\t\
-force		      Always write output files\n\
\n\
<classes> are specified with their fully qualified names (for\n\
instance, java.lang.Object).\n

#
# Version string.
#
javah.version=javah version "{0}"

#
# These should have better diagnostics.
#
super.class.not.found=\
	A required super class {0} could not be found.
class.not.found=\
	Class {0} could not be found.
io.exception=\
	Can''t recover from an I/O error with the following message: \
	{0}.

#
# Problems in the guts of javah.
#
encoding.iso8859_1.not.found=\
	ISO8859_1 converter was not found for output.  This is \
        probably due to an error in the installation installation.
tried.to.define.non.static=\
	Tried to generate #define for non-static field.
jni.unknown.type=\
	An unknown type encountered (JNI).
unknown.array.type=\
	An unknown array type encountered when generating old style headers.
unknown.type.for.field=\
	An unknown type encountered when generating old style headers.
unknown.type.in.method.signature=\
	An unknown type eccountered when generating old style stubs.
