#
# @(#)jar_de.properties	1.10 04/05/19
#
# Copyright 1996-1998 by Sun Microsystems, Inc.,
# 901 San Antonio Road, Palo Alto, California, 94303, U.S.A.
# All rights reserved.
#
# This software is the confidential and proprietary information
# of Sun Microsystems, Inc. ("Confidential Information").  You
# shall not disclose such Confidential Information and shall use
# it only in accordance with the terms of the license agreement
# you entered into with Sun.
#

error.cant.open=\
     \u00D6ffnen nicht m\u00F6glich: {0}
error.illegal.option=\
        Unzul\u00E4ssige Option: {0}
error.bad.option=\
        Eine der Optionen -{ctxu} muss angegeben werden.
error.bad.cflag=\
        Flag 'c' erfordert die Angabe von Eingabedateien!
error.bad.uflag=\
        Flag 'u' erfordert die Angabe von Manifest- oder Eingabedateien!
error.nosuch.fileordir=\
        {0} : Datei oder Verzeichnis existiert nicht.
error.write.file=\
        Fehler beim Schreiben in vorhandener JAR-Datei.
error.create.dir=\
        {0} : Verzeichnis konnte nicht erstellt werden.
error.incorrect.length=\
        Falsche L\u00E4nge bei der Verarbeitung von: {0}
out.added.manifest=\
        Manifest wurde hinzugef\u00FCgt.
out.update.manifest=\
        Manifest wurde aktualisiert.
out.ignore.entry=\
        Eintrag {0} wird ignoriert.
out.adding=\
        Hinzuf\u00FCgen von: {0}
out.deflated=\
        \ \(komprimiert {0} %)
out.stored=\
        \ \(gespeichert 0 %)
out.create=\
        \ \ \ \ \ erstellt: {0}
out.extracted=\
        \ \ \ extrahiert: {0}
out.inflated=\
        dekomprimiert: {0}
out.size=\
        \ \(ein = {0}) (aus = {1})

usage=\
Syntax: jar {ctxu}[vfm0Mi] [JAR-Datei] [Manifest-Datei] [-C dir] Dateien ...\n\
Optionen:\n\
\ \   -c  neues Archiv erstellen\n\
\ \   -t  Inhaltsverzeichnis f\u00FCr Archiv auflisten\n\
\ \   -x  benannte (oder alle) Dateien aus dem Archiv extrahieren\n\
\ \   -u  vorhandenes Archiv aktualisieren\n\
\ \   -v  ausf\u00FChrliche Ausgabe f\u00FCr Standardausgabe generieren\n\
\ \   -f  Namen der Archivdatei angeben\n\
\ \   -m  Manifestinformationen aus angegebener Manifest-Datei einbeziehen\n\
\ \   -0  nur speichern; keine ZIP-Komprimierung verwenden\n\
\ \   -M  keine Manifest-Datei f\u00FCr die Eintr\u00E4ge erstellen\n\
\ \   -i  Indexinformationen f\u00FCr die angegebenen JAR-Dateien generieren\n\
\ \   -C  ins angegebene Verzeichnis wechseln und folgende Datei einbeziehen\n\
Falls eine Datei ein Verzeichnis ist, wird sie rekursiv verarbeitet.\n\
Der Name der Manifest-Datei und der Name der Archivdatei m\u00FCssen\n\
in der gleichen Reihenfolge wie die Flags 'm' und 'f' angegeben werden.\n\n\
Beispiel 1: Archivieren von zwei Klassendateien in einem Archiv mit dem Namen classes.jar: \n\
\ \      jar cvf classes.jar Foo.class Bar.class \n\
Beispiel 2: Verwenden der vorhandenen Manifest-Datei 'meinmanifest' und Archivieren aller\n\
\ \          Dateien im Verzeichnis foo/ in 'classes.jar': \n\
\ \      jar cvfm classes.jar meinmanifest -C foo/ .\n

