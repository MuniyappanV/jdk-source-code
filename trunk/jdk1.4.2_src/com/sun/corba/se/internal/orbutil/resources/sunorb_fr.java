package com.sun.corba.se.internal.orbutil.resources;

import java.util.ListResourceBundle;

public final class sunorb_fr extends ListResourceBundle {
    private static final Object[][] contents = {
        { "\n", "" },
        { "bootstrap.exception", "erreur d\u00E9tect\u00E9e pendant l''enregistrement des propri\u00E9t\u00E9s dans le fichier {0} : Erreur {1}" },
        { "bootstrap.filenotfound", "fichier {0} introuvable" },
        { "bootstrap.filenotreadable", "le fichier {0} n''est pas lisible" },
        { "bootstrap.success", "configuration du port sur {0} et lecture des services de {1}" },
        { "bootstrap.usage", "Syntaxe : {0} <options> \n\no\u00F9 <options> comprend :\n  -ORBInitialPort        Port initial (requis)\n  -InitialServicesFile   Fichier contenant la liste des services initiaux (requis)\n" },
        { "orbd.commfailure", "\nLe d\u00E9marrage de ORBD a \u00E9chou\u00E9 car ORBinitialPort est d\u00E9j\u00E0 utilis\u00E9" },
        { "orbd.internalexception", "\nLe d\u00E9marrage de ORBD a \u00E9chou\u00E9 \u00E0 cause d'une exception interne. \nCauses possibles\u00A0: \n1. Le ORBInitialPort ou le ORBActivationPort sp\u00E9cifi\u00E9 est d\u00E9j\u00E0 utilis\u00E9 \n2. Pas d'autorisation en \u00E9criture permettant d'\u00E9crire orb.db " },
        { "orbd.usage", "Syntaxe : {0} <options> \n\no\u00F9 <options> comprend :\n  -port                  Port d''activation o\u00F9 le ORBD doit \u00EAtre d\u00E9marr\u00E9, 1049 par d\u00E9faut (facultatif)\n  -defaultdb             R\u00E9pertoire des fichiers ORBD, par d\u00E9faut \"./orb.db\" (facultatif)\n  -serverid              ID de serveur pour ORBD, 1 (facultatif)\n  -ORBInitialPort        Port initial (requis)\n  -ORBInitialHost        Nom d''h\u00F4te initial (requis)\n" },
        { "pnameserv.success", "NameServer persistant d\u00E9marr\u00E9" },
        { "servertool.appname", "\tNom d''application     - {0}" },
        { "servertool.args", "\targs      - {0}" },
        { "servertool.baddef", "D\u00E9finition de serveur non valide : {0}" },
        { "servertool.banner", "\n\nBienvenue dans l'outil Java IDL Server Tool \nSp\u00E9cifiez des commandes \u00E0 l'invite \n" },
        { "servertool.classpath", "\tclasspath - {0}" },
        { "servertool.getserverid", "\n\tgetserverid [ -applicationName <nom> ] \n" },
        { "servertool.getserverid1", "renvoyer l'ID serveur pour un applicationName" },
        { "servertool.getserverid2", "\tL''ID serveur de applicationName {0} est {1}" },
        { "servertool.helddown", "\tserveur interrompu." },
        { "servertool.help", "\thelp\n\tOR\n\thelp <commande>\n" },
        { "servertool.help1", "afficher l'aide" },
        { "servertool.list", "\n\tlist" },
        { "servertool.list1", "lister tous les serveurs inscrits" },
        { "servertool.list2", "\n\tID serveur\tNom de classe serveur\t\tApplication serveur\n\t---------\t-----------------\t\t------------------\n" },
        { "servertool.listactive", "\n\tlistactive" },
        { "servertool.listactive1", "lister les serveurs actifs" },
        { "servertool.listappnames", "\tlistappnames\n" },
        { "servertool.listappnames1", "lister les noms d'application d\u00E9finis" },
        { "servertool.listappnames2", "noms d'application du serveur d\u00E9finis :" },
        { "servertool.locate", "\n\tlocate [ -serverid <ID serveur> | -applicationName <nom> ] [ <-endpointType <type de point d'extr\u00E9mit\u00E9> ] \n" },
        { "servertool.locate1", "rep\u00E9rer des ports de type sp\u00E9cifique d'un serveur inscrit" },
        { "servertool.locate2", "\n\n\tNom d''h\u00F4te {0} \n\n\t\tPort\t\tType de port\t\tID ORB\n\t\t----\t\t---------\t\t------\n" },
        { "servertool.locateorb", "\n\tlocateperorb [ -serverid <ID serveur> | -applicationName <nom> ] [ -orbid <nom ORB> ]\n" },
        { "servertool.locateorb1", "rep\u00E9rer les ports d'un ORB sp\u00E9cifique de serveurs inscrits" },
        { "servertool.locateorb2", "\n\n\tNom d''h\u00F4te {0} \n\n\t\tPort\t\tType de port\t\tID ORB\n\t\t----\t\t--------\t\t------\n" },
        { "servertool.name", "\tnom      - {0}" },
        { "servertool.nosuchorb", "\tORB non valide." },
        { "servertool.nosuchserver", "\tce serveur est introuvable." },
        { "servertool.orbidmap", "\tSyntaxe : orblist [ -serverid <ID serveur> | -applicationName <nom> ]\n" },
        { "servertool.orbidmap1", "liste des noms orb et de leur mappage" },
        { "servertool.orbidmap2", "\n\tID ORB\t\tNom ORB\n\t------\t\t--------\n" },
        { "servertool.quit", "\n\tquit\n" },
        { "servertool.quit1", "fermer cet outil" },
        { "servertool.register", "\n\n\tregister -server <nom de classe de serveur> \n\t         -applicationName <deuxi\u00E8me nom de serveur> \n\t         -classpath <chemin de classe au serveur> \n\t         -args <arguments au serveur> \n\t         -vmargs <arguments au serveur Java VM>\n" },
        { "servertool.register1", "inscrire un serveur activable" },
        { "servertool.register2", "\tserveur inscrit (ID serveur = {0})." },
        { "servertool.register3", "\tserveur inscrit mais interrompu (ID serveur = {0})." },
        { "servertool.register4", "\tserveur d\u00E9j\u00E0 inscrit (ID serveur = {0})." },
        { "servertool.serverid", "\tserver id - {0}" },
        { "servertool.servernotrunning", "\tLe serveur ne fonctionne pas." },
        { "servertool.serverup", "\tle serveur fonctionne d\u00E9j\u00E0." },
        { "servertool.shorthelp", "\n\n\tCommandes disponibles : \n\t------------------- \n" },
        { "servertool.shutdown", "\n\tshutdown [ -serverid <ID serveur> | -applicationName <nom> ]\n" },
        { "servertool.shutdown1", "arr\u00EAter un serveur inscrit" },
        { "servertool.shutdown2", "\tserveur arr\u00EAt\u00E9." },
        { "servertool.startserver", "\n\tstartup [ -serverid <ID serveur> | -applicationName <nom> ]\n" },
        { "servertool.startserver1", "d\u00E9marrer un serveur inscrit" },
        { "servertool.startserver2", "\tserveur d\u00E9marr\u00E9." },
        { "servertool.unregister", "\n\tunregister [ -serverid <ID serveur> | -applicationName <nom> ] \n" },
        { "servertool.unregister1", "d\u00E9sinscrire un serveur inscrit" },
        { "servertool.unregister2", "\tserveur d\u00E9sinscrit." },
        { "servertool.usage", "Syntaxe : {0} <options> \n\no\u00F9 <options> comprend :\n  -ORBInitialPort        Port initial (requis)\n  -ORBInitialHost        Nom d''h\u00F4te initial (requis)\n" },
        { "servertool.vmargs", "\tvmargs    - {0}" },
        { "tnameserv.exception", "Erreur d\u00E9tect\u00E9e pendant le d\u00E9marrage du service d''amor\u00E7age sur le port {0}" },
        { "tnameserv.hs1", "Contexte d''appellation initial :\n{0}" },
        { "tnameserv.hs2", "TransientNameServer : configuration du port pour des r\u00E9f\u00E9rences d''objet initial \u00E0 : {0}" },
        { "tnameserv.hs3", "Pr\u00EAt." },
        { "tnameserv.invalidhostoption", "ORBInitialHost n'est pas une option valide pour NameService" },
        { "tnameserv.orbinitialport0", "ORBInitialPort 0 n'est pas une option valide pour NameService" },
        { "tnameserv.usage", "essayez un autre port avec les arguments de ligne de commande -ORBInitialPort <num\u00E9ro de port>" },

    };

    protected final Object[][] getContents() {
         return contents;
    }
}
