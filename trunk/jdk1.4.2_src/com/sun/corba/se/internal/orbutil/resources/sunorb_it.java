package com.sun.corba.se.internal.orbutil.resources;

import java.util.ListResourceBundle;

public final class sunorb_it extends ListResourceBundle {
    private static final Object[][] contents = {
        { "bootstrap.exception", "rilevata un''eccezione durante il salvataggio delle propriet\u00E0 nel file {0}: eccezione {1}" },
        { "bootstrap.filenotfound", "impossibile trovare il file {0}" },
        { "bootstrap.filenotreadable", "il file {0} non \u00E8 leggibile" },
        { "bootstrap.success", "impostazione porta su {0} e lettura servizi da {1} in corso" },
        { "bootstrap.usage", "Utilizzo: {0} <opzioni> \n\ndove <opzioni> comprende:\n  -ORBInitialPort        Porta iniziale (richiesta)\n  -InitialServicesFile   File contenente l''elenco dei servizi iniziali (richiesto)\n" },
        { "orbd.commfailure", "\nImpossibile avviare ORBD perch\u00E9 ORBinitialPort \u00E8 gi\u00E0 in uso" },
        { "orbd.internalexception", "\nImpossibile avviare ORBD a causa di un'eccezione interna. \neCause possibili: \n1. ORBInitialPort o ORBActivationPort specificato gi\u00E0 in uso \n2. Mancanza dei permessi di scrittura per orb.db " },
        { "orbd.usage", "Utilizzo: {0} <opzioni> \n\ndove <opzioni> comprende:\n  -port                  Porta di attivazione da cui avviare ORBD, default 1049 (opzionale)\n  -defaultdb             Directory per i file ORBD, default \"./orb.db\" (opzionale)\n  -serverid              Id server per ORBD, default 1 (opzionale)\n  -ORBInitialPort        Porta iniziale (richiesta)\n  -ORBInitialHost       Nome host iniziale (richiesto)\n" },
        { "pnameserv.success", "NameServer persistente avviato correttamente" },
        { "servertool.appname", "\tNomeApplicazione     - {0}" },
        { "servertool.args", "\targom      - {0}" },
        { "servertool.baddef", "Definizione server errata: {0}" },
        { "servertool.banner", "\n\nBenvenuti a Java IDL Server Tool     \nimmettere i comandi quando richiesto \n" },
        { "servertool.classpath", "\tclasspath - {0}" },
        { "servertool.getserverid", "\n\tgetserverid [ -applicationName <nome> ] \n" },
        { "servertool.getserverid1", "restituisce l'id server per un applicationName" },
        { "servertool.getserverid2", "\tL''ID server per applicationName {0} \u00E8 {1}" },
        { "servertool.helddown", "\til server \u00E8 mantenuto inattivo." },
        { "servertool.help", "\thelp\n\tOR\n\thelp <nome comando>\n" },
        { "servertool.help1", "get help" },
        { "servertool.list", "\n\tlist\n" },
        { "servertool.list1", "elenca tutti i server registrati" },
        { "servertool.list2", "\n\tID server\tNome classe server\t\tApplicazione server\n\t---------\t------------------\t\t-------------------\n" },
        { "servertool.listactive", "\n\tlistactive" },
        { "servertool.listactive1", "elenca i server attualmente attivi" },
        { "servertool.listappnames", "\tlistappnames\n" },
        { "servertool.listappnames1", "elenca gli applicationName attualmente definiti" },
        { "servertool.listappnames2", "applicationName del server attualmente definiti:" },
        { "servertool.locate", "\n\tlocate [ -serverid <id server> | -applicationName <nome> ] [ <-endpointType <endpointType> ] \n" },
        { "servertool.locate1", "individua le porte di un tipo specifico per un server registrato" },
        { "servertool.locate2", "\n\n\tNome host {0} \n\n\t\tPorta\t\tTipo porta\t\tId ORB\n\t\t-----\t\t----------\t\t------\n" },
        { "servertool.locateorb", "\n\tlocateperorb [ -serverid <id server> | -applicationName <nome> ] [ -orbid <nome ORB> ]\n" },
        { "servertool.locateorb1", "individua le porte per un orb specifico di un server registrato" },
        { "servertool.locateorb2", "\n\n\tNome host {0} \n\n\t\tPorta\t\tTipoPorta\t\tId ORB\n\t\t-----\t\t---------\t\t------\n" },
        { "servertool.name", "\tnome      - {0}" },
        { "servertool.nosuchorb", "\tORB non valido." },
        { "servertool.nosuchserver", "\timpossibile trovare il server indicato." },
        { "servertool.orbidmap", "\tUtilizzo: orblist [ -serverid <id server> | -applicationName <nome> ]\n" },
        { "servertool.orbidmap1", "elenco dei nomi orb e relativa mappatura" },
        { "servertool.orbidmap2", "\n\tId ORB\t\tNome ORB\n\t------\t\t--------\n" },
        { "servertool.quit", "\n\tquit\n" },
        { "servertool.quit1", "esci dall'applicazione corrente" },
        { "servertool.register", "\n\n\tregister -server <nome classe server> \n\t         -applicationName <nome server alternativo> \n\t         -classpath <classpath per il server> \n\t         -args <argom per il server> \n\t         -vmargs <argom per la Java VM del server>\n" },
        { "servertool.register1", "registra un server attivabile" },
        { "servertool.register2", "\tserver registrato (idserver = {0})." },
        { "servertool.register3", "\tserver registrato ma mantenuto inattivo (idserver = {0})." },
        { "servertool.register4", "\tserver gi\u00E0 registrato (idserver = {0})." },
        { "servertool.serverid", "\tid server - {0}" },
        { "servertool.servernotrunning", "\til server non \u00E8 in funzione." },
        { "servertool.serverup", "\til server \u00E8 gi\u00E0 attivo." },
        { "servertool.shorthelp", "\n\n\tComandi disponibili:\n\t-------------------- \n" },
        { "servertool.shutdown", "\n\tshutdown [ -serverid <id server> | -applicationName <nome> ]\n" },
        { "servertool.shutdown1", "arresta un server registrato" },
        { "servertool.shutdown2", "\tserver arrestato correttamente" },
        { "servertool.startserver", "\n\tstartup [ -serverid <id server> | -applicationName <nome> ]\n" },
        { "servertool.startserver1", "avvia un server registrato" },
        { "servertool.startserver2", "\tserver avviato correttamente." },
        { "servertool.unregister", "\n\tunregister [ -serverid <id server> | -applicationName <nome> ] \n" },
        { "servertool.unregister1", "rimuovi un server registrato." },
        { "servertool.unregister2", "\tserver rimosso dal registro." },
        { "servertool.usage", "Utilizzo: {0} <opzioni> \n\ndove <opzioni> comprende:\n  -ORBInitialPort        Porta iniziale (richiesta)\n  -ORBInitialHost        Nome host iniziale (richiesto)\n" },
        { "servertool.vmargs", "\targomvm    - {0}" },
        { "tnameserv.exception", "rilevata un''eccezione durante l''avvio del servizio di bootstrap sulla porta {0}" },
        { "tnameserv.hs1", "Contesto di denominazione iniziale:\n{0}" },
        { "tnameserv.hs2", "TransientNameServer: impostazione della porta per i riferimenti degli oggetti iniziali a: {0}" },
        { "tnameserv.hs3", "Pronto." },
        { "tnameserv.invalidhostoption", "ORBInitialHost non \u00E8 un'opzione valida per NameService" },
        { "tnameserv.orbinitialport0", "ORBInitialPort 0 non \u00E8 un'opzione valida per NameService" },
        { "tnameserv.usage", "utilizzare un'altra porta con gli argomenti di riga di comando -ORBInitialPort <n.porta>" },

    };

    protected final Object[][] getContents() {
         return contents;
    }
}
